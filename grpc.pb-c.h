/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: grpc.proto */

#ifndef PROTOBUF_C_grpc_2eproto__INCLUDED
#define PROTOBUF_C_grpc_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct ArpCommonRes ArpCommonRes;
typedef struct GrpcDpdkArpReq GrpcDpdkArpReq;
typedef struct GrpcDpdkArpRes GrpcDpdkArpRes;
typedef struct GrpcDpdkArpRes__TablePkts GrpcDpdkArpRes__TablePkts;


/* --- enums --- */


/* --- messages --- */

struct  ArpCommonRes
{
  ProtobufCMessage base;
  int32_t ret_state;
};
#define ARP_COMMON_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&arp_common_res__descriptor) \
    , 0 }


struct  GrpcDpdkArpReq
{
  ProtobufCMessage base;
};
#define GRPC_DPDK_ARP_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc_dpdk_arp_req__descriptor) \
     }


struct  GrpcDpdkArpRes__TablePkts
{
  ProtobufCMessage base;
  char *scrip;
  uint32_t request_pkts_amount;
  uint32_t rate;
};
#define GRPC_DPDK_ARP_RES__TABLE_PKTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc_dpdk_arp_res__table_pkts__descriptor) \
    , NULL, 0, 0 }


struct  GrpcDpdkArpRes
{
  ProtobufCMessage base;
  ArpCommonRes *res;
  size_t n_arp_pkts;
  GrpcDpdkArpRes__TablePkts **arp_pkts;
  size_t n_multicast_pkts;
  GrpcDpdkArpRes__TablePkts **multicast_pkts;
};
#define GRPC_DPDK_ARP_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc_dpdk_arp_res__descriptor) \
    , NULL, 0,NULL, 0,NULL }


/* ArpCommonRes methods */
void   arp_common_res__init
                     (ArpCommonRes         *message);
size_t arp_common_res__get_packed_size
                     (const ArpCommonRes   *message);
size_t arp_common_res__pack
                     (const ArpCommonRes   *message,
                      uint8_t             *out);
size_t arp_common_res__pack_to_buffer
                     (const ArpCommonRes   *message,
                      ProtobufCBuffer     *buffer);
ArpCommonRes *
       arp_common_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   arp_common_res__free_unpacked
                     (ArpCommonRes *message,
                      ProtobufCAllocator *allocator);
/* GrpcDpdkArpReq methods */
void   grpc_dpdk_arp_req__init
                     (GrpcDpdkArpReq         *message);
size_t grpc_dpdk_arp_req__get_packed_size
                     (const GrpcDpdkArpReq   *message);
size_t grpc_dpdk_arp_req__pack
                     (const GrpcDpdkArpReq   *message,
                      uint8_t             *out);
size_t grpc_dpdk_arp_req__pack_to_buffer
                     (const GrpcDpdkArpReq   *message,
                      ProtobufCBuffer     *buffer);
GrpcDpdkArpReq *
       grpc_dpdk_arp_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc_dpdk_arp_req__free_unpacked
                     (GrpcDpdkArpReq *message,
                      ProtobufCAllocator *allocator);
/* GrpcDpdkArpRes__TablePkts methods */
void   grpc_dpdk_arp_res__table_pkts__init
                     (GrpcDpdkArpRes__TablePkts         *message);
/* GrpcDpdkArpRes methods */
void   grpc_dpdk_arp_res__init
                     (GrpcDpdkArpRes         *message);
size_t grpc_dpdk_arp_res__get_packed_size
                     (const GrpcDpdkArpRes   *message);
size_t grpc_dpdk_arp_res__pack
                     (const GrpcDpdkArpRes   *message,
                      uint8_t             *out);
size_t grpc_dpdk_arp_res__pack_to_buffer
                     (const GrpcDpdkArpRes   *message,
                      ProtobufCBuffer     *buffer);
GrpcDpdkArpRes *
       grpc_dpdk_arp_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc_dpdk_arp_res__free_unpacked
                     (GrpcDpdkArpRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ArpCommonRes_Closure)
                 (const ArpCommonRes *message,
                  void *closure_data);
typedef void (*GrpcDpdkArpReq_Closure)
                 (const GrpcDpdkArpReq *message,
                  void *closure_data);
typedef void (*GrpcDpdkArpRes__TablePkts_Closure)
                 (const GrpcDpdkArpRes__TablePkts *message,
                  void *closure_data);
typedef void (*GrpcDpdkArpRes_Closure)
                 (const GrpcDpdkArpRes *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor arp_common_res__descriptor;
extern const ProtobufCMessageDescriptor grpc_dpdk_arp_req__descriptor;
extern const ProtobufCMessageDescriptor grpc_dpdk_arp_res__descriptor;
extern const ProtobufCMessageDescriptor grpc_dpdk_arp_res__table_pkts__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_grpc_2eproto__INCLUDED */
